- name: Remove existing config files and folders
  file:
    path: "{{ user.home }}/{{ item }}"
    state: absent
    force: true
  with_items: "{{ files + folders }}"
  ignore_errors: true
- name: Ensure necessary directories exist
  file:
    path: "{{ user.home }}/{{ item }}"
    state: directory
  with_items:
    - "{{ folders }}"

- name: Find directories to stow
  find:
    paths: dotfiles
    file_type: directory
    depth: 1
    patterns: "*"
  register: stow_dirs

- name: Prepare stow directories list
  set_fact:
    to_stow: "{{ stow_dirs.files | map(attribute='path') | map('basename') | join(' ') }}"

- name: Stow dotfiles
  command: stow -d dotfiles --verbose 1 --target "{{ user.home }}" --ignore='\.DS_Store' {{ to_stow }}
  args:
    chdir: "{{ playbook_dir }}"
  environment:
    STOW_DIR: "{{ playbook_dir }}/dotfiles"

- name: Check if wallpapers directory exists if not create it
  file:
    path: "{{ user.home }}/Downloads/wallpapers"
    state: directory

- name: Stow Wallpapers
  command: stow -d . --verbose 1 --target "{{ user.home }}/Downloads/wallpapers" --ignore='\.DS_Store' wallpapers
  args:
    chdir: "{{ playbook_dir }}"
  ignore_errors: true

- name: Stow fonts
  command: stow -d . --verbose 1 --target "{{ user.home }}/Library/fonts" --ignore='\.DS_Store' fonts
  args:
    chdir: "{{ playbook_dir }}"
  ignore_errors: true
